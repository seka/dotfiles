# ------------------------------
# option
# ------------------------------
# Make Tab autocomplete regardless of filename case
set completion-ignore-case on

# List all matches in case multiple possible completions are possible
set show-all-if-ambiguous on

# Immediately add a trailing slash when autocompleting symlinks to directories
set mark-symlinked-directories on

# silence
set bell-style none

# Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'
set input-meta on
set output-meta on
set convert-meta off

# ------------------------------
# keybind
# ------------------------------
typeset -A key

key[Home]=${terminfo[khome]}

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

bindkey  "${key[Home]}"     beginning-of-line
bindkey  "${key[End]}"      end-of-line
bindkey  "${key[Insert]}"   overwrite-mode
bindkey  "${key[Delete]}"   delete-char
bindkey  "${key[Up]}"       up-line-or-history
bindkey  "${key[Down]}"     down-line-or-history
bindkey  "${key[Left]}"     backward-char
bindkey  "${key[Right]}"    forward-char
bindkey  "${key[PageUp]}"   beginning-of-buffer-or-history
bindkey  "${key[PageDown]}" end-of-buffer-or-history

# Ctrl + m => cdr
zle -N peco-cdr
bindkey '^xc' peco-cdr

# Ctrl + h => history
zle -N peco-select-history
bindkey '^xh' peco-select-history

# Ctrl + g => ghq
zle -N peco-ghq
bindkey '^xg' peco-ghq

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        printf '%s' "${terminfo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi

